import com.github.triplet.gradle.androidpublisher.ResolutionStrategy as GPPResolutionStrategy

buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'com.github.triplet.gradle:play-publisher:3.5.0'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.mikepenz.aboutlibraries.plugin'
apply plugin: 'com.github.triplet.play'

repositories {
    maven { url "https://jitpack.io" }
    mavenCentral()
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "tech.relaycorp.ping"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 7
        versionName project.findProperty("versionName") ?: "0.7"
        testInstrumentationRunner "tech.relaycorp.ping.test.TestAndroidJUnitRunner"

        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas".toString())
                arg("room.incremental", "true")
            }
            correctErrorTypes = true
        }
    }

    signingConfigs {
        debug {}

        if (project.hasProperty('signingKeystorePath')) {
            release {
                storeFile file(signingKeystorePath)
                storePassword System.getenv("ANDROID_KEYSTORE_PASSWORD")
                keyAlias System.getenv("ANDROID_KEYSTORE_KEY_ALIAS")
                keyPassword System.getenv("ANDROID_KEYSTORE_KEY_PASSWORD")
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            if (project.hasProperty('signingKeystorePath')) {
                signingConfig signingConfigs.release
            }
        }
    }
    compileOptions {
        // Workaround for https://github.com/relaycorp/awala-ping-android/issues/39
        // coreLibraryDesugaringEnabled true

        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/*'
        // Due to https://github.com/Kotlin/kotlinx.coroutines/issues/2023
        exclude 'META-INF/licenses/*'
        exclude '**/attach_hotspot_windows.dll'
    }
    lintOptions {
        checkAllWarnings true
        warningsAsErrors true
        abortOnError true
        lintConfig file('lint.xml')
    }
    sourceSets {
        androidTest {
            java.srcDirs += "src/sharedTest/java"
            resources.srcDirs += "src/sharedTest/resources"
        }
        test {
            java.srcDirs += "src/sharedTest/java"
            resources.srcDirs += "src/sharedTest/resources"
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    useLibrary 'android.test.mock'
}

dependencies {
    // Java 8
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"

    // Android
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.security:security-crypto:1.1.0-alpha03'

    // Dependency Injection
    api 'com.google.dagger:dagger:2.37'
    kapt 'com.google.dagger:dagger-compiler:2.37'

    // Awala
    implementation 'com.github.relaycorp:awala-endpoint-android:v1.6.12'

    // UI
    implementation 'dev.chrisbanes.insetter:insetter:0.6.0'

    // Preferences
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'com.fredporciuncula:flow-preferences:1.5.0'

    // Database
    implementation 'androidx.room:room-runtime:2.3.0'
    kapt 'androidx.room:room-compiler:2.3.0'
    implementation 'androidx.room:room-ktx:2.3.0'

    // Lists
    implementation "com.airbnb.android:epoxy:4.6.2"
    kapt "com.airbnb.android:epoxy-processor:4.4.4"

    // FAB Speed Dial
    implementation "com.leinardi.android:speed-dial:3.2.0"

    // Display open-source licenses
    implementation "com.mikepenz:aboutlibraries:$aboutLibrariesVersion"

    // Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinCoroutinesVersion"
    testImplementation 'org.mockito:mockito-inline:3.11.2'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    testImplementation 'tech.relaycorp:awala-testing:1.2.3'
    testImplementation 'org.robolectric:robolectric:4.6.1'

    // Instrumentation Testing
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinCoroutinesVersion"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'
    androidTestImplementation('com.schibsted.spain:barista:3.9.0') {
        exclude group: 'org.jetbrains.kotlin'
    }
    androidTestImplementation "org.mockito:mockito-android:3.11.2"
    androidTestImplementation("com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0") {
        // Workaround for Android API < 26:
        // https://github.com/mockito/mockito/pull/2024
        exclude group: "org.mockito", module: "mockito-core"
    }
    kaptAndroidTest 'com.google.dagger:dagger-compiler:2.35.1'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.freeCompilerArgs += [
            '-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi',
            '-Xuse-experimental=kotlinx.coroutines.FlowPreview',
            '-Xuse-experimental=kotlin.time.ExperimentalTime'
    ]
}

play {
    enabled.set(project.findProperty("enableGpp") == "true")
    track.set("beta")
    defaultToAppBundles.set(true)
    resolutionStrategy.set(GPPResolutionStrategy.AUTO)
}
